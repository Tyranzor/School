package unl.cse.trucks;

public class TruckList {
	TruckListNode start = null;

	public void clear() {
		start = null;
	}

	public void addToStart(Truck t) {
		TruckListNode newNode = new TruckListNode(t);

		if (this.start == null) {
			start = newNode;
		} else if (start != null) {
			newNode.setNext(start);
			this.start = newNode;
		}
	}

	public void addToEnd(Truck t) {
		TruckListNode newNode = new TruckListNode(t);
		if (start == null) {
			start = newNode;

		} else if (start != null) {

			TruckListNode current = start;
			while (current.getNext() != null) {
				current = current.getNext();
			}
			current.setNext(newNode);
		}
	}

	public void remove(int position) {
		if (position == 0) {
			TruckListNode tempNode = start.getNext();
			start = tempNode;
		} else if (position == getSize()) {
			getTruckListNode(getSize() - 1).setNext(null);
		} else {
			TruckListNode afterBreach = getTruckListNode(position + 1);
			TruckListNode beforeBreach = getTruckListNode(position - 1);
			beforeBreach.setNext(afterBreach);
		}

	}

	private TruckListNode getTruckListNode(int position) {
		TruckListNode toReturn = start;

		for (int i = 0; i < position; i++) {
			toReturn = toReturn.getNext();

		}

		return toReturn;
	}

	public Truck getTruck(int position) {

		return getTruckListNode(position).getTruck();
	}

	public void print() {
		TruckListNode current = start;
		if (start == null || current == null) {
			System.out.println("List Empty");
		} else {
			do {
				System.out.println(current.getTruck().getLicensePlate());
				current = current.getNext();
			} while (current != null);
		}
	}

	public int getSize() {

		TruckListNode current = start;
		int size = 0;
		if (start == null || current == null) {
			System.out.println("List Empty");
		} else {
			do {
				System.out.println(size);
				size++;
				current = current.getNext();
			} while (current != null);
			return size;
		}
		return 0;
	}

}
